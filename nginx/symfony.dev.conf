# First attempt at a configuration which works for Symfony apps, mainly taken from
# http://symfony.com/doc/current/cookbook/configuration/web_server_configuration.html#nginx
# This is the dev version, and includes a dev-only section which allows access to app_dev.php and config.php.
# Potentially there's a cleaner way to do drop in just a dev section in addition to the main production section, rather
# than repeating most of the config in two files - maybe with a separate server config with server_host symfony.dev?
# But I don't know - NGINX configs are new to me so we can improve it later.
server {
    # Don't bother defining `server_name`, the intention of this NGINX server is to be the front end for a single
    # service.  If we want to run multiple services, they can have an NGINX server each.

    # No need to define `listen` either, we'll default to listening on port 80.

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }
    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        # The below config requires that the PHP-FPM service is named 'app' and has port 9000 open.
        fastcgi_pass app:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/web$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT /var/www/html;
    }
    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass app:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html/web$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT /var/www/html;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        # internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;
}